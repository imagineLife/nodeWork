CONST { PIPELINE } = REQUIRE('STREAM');
CONST { JOIN } = REQUIRE('PATH');
CONST { CREATEREADSTREAM, CREATEWRITESTREAM } = REQUIRE('FS');
CONST { TRANSFORM } = REQUIRE('STREAM');

FUNCTION HANDLEPIPELINEERROR(ERR){
  IF(ERR){
    CONSOLE.ERROR(ERR);
    RETURN;
  }
  CONSOLE.LOG('FINISHED WRITING STREAM!')
}

PIPELINE(
  CREATEREADSTREAM(__FILENAME),
  CREATEWRITESTREAM(JOIN(__DIRNAME,'STREAM-OUT.TXT')),
  HANDLEPIPELINEERROR
)

/*
  GOOD FOR...
  - LARGE-FILES
  - LOW MEMORY USAGE
  - 
*/ 


// LEVEARGING TRANSFORM STREAM BETWEEN FILES
CONST CREATEUPPERCASESTREAM = () => {
  RETURN NEW TRANSFORM({
    TRANSFORM (CHUNK, ENC, NXT){
      CONST UPD = CHUNK.TOSTRING().TOUPPERCASE()
      NXT(NULL,UPD);
    }
  })
}

PIPELINE(
  CREATEREADSTREAM(__FILENAME),
  CREATEUPPERCASESTREAM(),
  CREATEWRITESTREAM(JOIN(__DIRNAME, 'OUT-UPPER-STREAM.TXT')),
  HANDLEPIPELINEERROR
)